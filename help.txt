# 1、宿主机上创建app用户
sudo groupadd -g 6000 app
sudo useradd -u 6001 -g app -m -d /home/app -s /bin/bash app
设置用户密码
sudo passwd app
查看结果
cat /etc/passwd | grep app
允许当前用户通过 sudo 切换到 app 用户：
sudo usermod -aG sudo $(whoami)
sudo su - app

# 2、运行之前记得先将.env、yeti.conf配置好

    # 3、其他前置步骤
    mkdir /data/app/yeti-data
    chown -R 6001:6000 /data/app/yeti-data
    mkdir /data/app/yeti-data/yeti_log
    echo " " > /data/app/yeti-data/yeti_log/yeti_audit.log
    echo " " > /data/app/yeti-data/yeti_log/yeti_system.log
    chmod 666 /data/app/yeti-data/yeti_log/yeti_audit.log
    chmod 666 /data/app/yeti-data/yeti_log/yeti_system.log

    # 4、设置mysql用户的权限
    mkdir /data/app/yeti-data/mysql-data
    sudo chown -R 999:999 /data/app/yeti-data/mysql-data
 
# 其他要点：
（1）yeti.conf放到对应目录下
（2）.env放到docker-compose所在目录下
（3）nginx.conf放到docker-compose所在目录下
（4）


# 漏洞修复：
## 1、ImageMagick有漏洞，直接build好后进入容器升级版本：
docker run -it <image_name> /bin/bash

### 删除的方法
对于基于 Debian/Ubuntu 的镜像
apt-get remove --purge -y imagemagick imagemagick-*
apt-get autoremove -y
apt-get clean
convert --version  # 如果返回 'command not found' 或类似信息，则表明已成功移除

创建新的镜像
docker commit <container_id> <new_image_name>:<tag>
如 docker commit <container_id> myapp:without-imagemagick

docker run -it myapp:without-imagemagick /bin/bash
convert --version  # 再次确认是否已移除
docker save -o myapp_without_imagemagick.tar myapp:without-imagemagick

### 更新的方法
apt-get update
apt-get install -y build-essential checkinstall \
    libx11-dev libxext-dev zlib1g-dev \
    libwebp-dev libtiff-dev libjpeg-dev libpng-dev libgif-dev libfontconfig1-dev \
    libfreetype6-dev libbz2-dev libzip-dev libopenexr-dev libheic-dev \
    liblqr-1-0-dev libfftw3-dev wget

wget https://download.imagemagick.org/ImageMagick/download/ImageMagick.tar.gz
tar -xzvf ImageMagick.tar.gz
cd ImageMagick-7.*

./configure
make
make install

ldconfig /usr/local/lib

docker commit 6424229b9091 yetiplatform/yeti:yeti_upgrade_Imagemagick
docker images
